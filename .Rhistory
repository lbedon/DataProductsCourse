addCircleMarkers(lng=hospitalBedsLA$lon,
lat=hospitalBedsLA$lat,
popup=hospitalBedsLA$country,
radius=hospitalBedsLA$beds*2,
label=paste(hospitalBedsLA$country,
"=",
as.character(round(hospitalBedsLA$beds,2)),
"hospital beds per 1000 habitants"),
color = ~pal(hospitalBedsLA$beds),
stroke = FALSE
)
hospitalBedsLA  %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=hospitalBedsLA$lon,
lat=hospitalBedsLA$lat,
popup=hospitalBedsLA$country,
radius=hospitalBedsLA$beds*2,
label=paste(hospitalBedsLA$country,
"=",
as.character(round(hospitalBedsLA$beds,2)),
"hospital beds per 1000 habitants"),
color = ~pal(hospitalBedsLA$beds),
stroke = FALSE,
opacity = 0.2
)
hospitalBedsLA  %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=hospitalBedsLA$lon,
lat=hospitalBedsLA$lat,
popup=hospitalBedsLA$country,
radius=hospitalBedsLA$beds*2,
label=paste(hospitalBedsLA$country,
"=",
as.character(round(hospitalBedsLA$beds,2)),
"hospital beds per 1000 habitants"),
color = ~pal(hospitalBedsLA$beds),
stroke = FALSE,
fillopacity = 0.2
)
hospitalBedsLA  %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=hospitalBedsLA$lon,
lat=hospitalBedsLA$lat,
popup=hospitalBedsLA$country,
radius=hospitalBedsLA$beds*2,
label=paste(hospitalBedsLA$country,
"=",
as.character(round(hospitalBedsLA$beds,2)),
"hospital beds per 1000 habitants"),
color = ~pal(hospitalBedsLA$beds),
stroke = FALSE,
fillOpacity = 0.2
)
hospitalBedsLA  %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=hospitalBedsLA$lon,
lat=hospitalBedsLA$lat,
popup=hospitalBedsLA$country,
radius=hospitalBedsLA$beds*2,
label=paste(hospitalBedsLA$country,
"=",
as.character(round(hospitalBedsLA$beds,2)),
"hospital beds per 1000 habitants"),
color = ~pal(hospitalBedsLA$beds),
stroke = FALSE,
fillOpacity = 0
)
hospitalBedsLA  %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(lng=hospitalBedsLA$lon,
lat=hospitalBedsLA$lat,
popup=hospitalBedsLA$country,
radius=hospitalBedsLA$beds*2,
label=paste(hospitalBedsLA$country,
"=",
as.character(round(hospitalBedsLA$beds,2)),
"hospital beds per 1000 habitants"),
color = ~pal(hospitalBedsLA$beds),
stroke = FALSE,
fillOpacity = .8
)
library(plotly)
plot_ly(mtcars$mpg~mtcars$wt)
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt)
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,color=~mtcars$am)
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,color=mtcars$am)
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp)
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,colors=mtcars$am)
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,color=mtcars$am)
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,color=mtcars$am,colors=c(rgb(.75,.25,.25),rgb(.25,.25,75)))
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,color=mtcars$am,colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75)))
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,color=factor(mtcars$am),colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75)))
mtcars$am<-
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,color=factor(mtcars$am,levels=c("automatic","manual")),colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75)))
mtcars$am<-
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,color=factor(mtcars$am,levels=c("automatic","manual")),colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75)))
mtcars$am<-
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,color=factor(mtcars$am),colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75)))
mtcars$am<-
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,color=factor(mtcars$am),colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75)))
mtcars$am<-
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,color=factor(mtcars$am),colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75)))
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,color=factor(mtcars$am),colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75)))
library(plotly)
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,color=factor(mtcars$am),colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75)))
plot_ly(mtcars,x=~mtcars$mpg,y=~mtcars$wt,size=mtcars$hp,color=factor(mtcars$am),colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75)))
plot_ly(mtcars,
x=~mtcars$mpg,
y=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am),
colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75))
)
plot_ly(mtcars,
x=~mtcars$mpg,
y=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,levels=c("automatic","manual")),
colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75))
)
factor(mtcars$am,levels=c("automatic","manual"))
as.factor(mtcars$am,levels=c("automatic","manual"))
plot_ly(mtcars,
x=~mtcars$mpg,
y=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75))
)
plot_ly(mtcars,
x=~mtcars$mpg,
y=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual"),ordered=FALSE),
colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75))
)
plot_ly(mtcars,
x=~mtcars$mpg,
y=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual"),ordered=TRUE),
colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75))
)
factor(mtcars$am,labels=c("automatic","manual"),ordered=TRUE)
factor(mtcars$am,labels=c("automatic","manual"))
factor(mtcars$am)
(mtcars$am)
mtcars$am
mtcars
mtcars$am
datasets(mtcars)
datasets("mtcars")
mtcars
rm(mtcars)
mtcars
factor(mtcars$am,labels=c("automatic","manual"))
factor(mtcars$am)
,
plot_ly(mtcars,
x=~mtcars$mpg,
y=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75))
)
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.75,.25,.25),rgb(.25,.25,.75))
)
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75))
)%>%
layout(xaxis=c(title="Cars Weight"))
library(plotly)
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75))
)%>%
layout(xaxis=(title="Cars Weight"))
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75))
)%>%
layout(
xaxis=c(title="Cars Weight"))
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75))
)%>%
layout(
xaxis=c(title="Cars Weight"))
axis_template <- list(showgrid=F,
zeroline = F ,
nticks = 20 ,
showline =T ,
title = ‘AXIS’ ,
axis_template <- list(showgrid=F,
zeroline = F ,
nticks = 20 ,
showline =T ,
title = ‘AXIS’,
axis_template <- list(showgrid=F,
zeroline = F ,
nticks = 20 ,
showline =T ,
title = "AXIS",
mirror = "all" )
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75))
)%>%
layout(
xaxis=c(title="Cars Weight"))
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75))
)%>%
layout(
xaxis=axis_template)
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75))
)%>%
layout(xaxis=axis_template)
xaxis_template <- list(showgrid=F,
zeroline = F ,
nticks = 20 ,
showline =T ,
title = "Cars Weight [1000 pounds]",
mirror = "all" )
yaxis_template <- list(showgrid=F,
zeroline = F ,
nticks = 20 ,
showline =T ,
title = "Fuel Efficiency [mpg]",
mirror = "all" )
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75))
)%>%
layout(xaxis=xaxis_template)
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75))
)%>%
layout(xaxis=xaxis_template,
yaxis=yaxis_template)
xaxis_template <- list(showgrid=F,
zeroline = F ,
nticks = 20 ,
showline =T ,
title = "Cars Weight [1000 lbs]",
mirror = "all" )
yaxis_template <- list(showgrid=F,
zeroline = F ,
nticks = 20 ,
showline =T ,
title = "Fuel Efficiency [mpg]",
mirror = "all" )
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75))
)%>%
layout(xaxis=xaxis_template,
yaxis=yaxis_template)
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75))
)%>%
layout(xaxis=xaxis_template,
yaxis=yaxis_template)
names(mtcars)
names(mtcars$mpg)
mtcars$mpg
labels(mtcars)
labels(mtcars[[1]])
labels(mtcars[[2]])
labels(mtcars[[3]])
labels(mtcars)[[2]]
labels(mtcars)[[1]]
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75)),
text = ~paste(labels(mtcars)[[1]]),
)%>%
layout(xaxis=xaxis_template,
yaxis=yaxis_template)
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.75,.25),rgb(.25,.25,.75)),
text = ~paste(labels(mtcars)[[1]])
)%>%
layout(xaxis=xaxis_template,
yaxis=yaxis_template)
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.25,.75),rgb(.25,.75,.25)),
text = ~paste(labels(mtcars)[[1]])
)%>%
layout(xaxis=xaxis_template,
yaxis=yaxis_template)
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.25,.75),rgb(.25,.75,.25)),
text = ~paste(labels(mtcars)[[1]],"\n","hp=",hp)
)%>%
layout(xaxis=xaxis_template,
yaxis=yaxis_template)
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.25,.75),rgb(.25,.75,.25)),
text = ~paste(labels(mtcars)[[1]],"\n","Gross horsepower = ",hp,"hp")
)%>%
layout(xaxis=xaxis_template,
yaxis=yaxis_template)
plot_ly(mtcars,
y=~mtcars$mpg,
x=~mtcars$wt,
size=mtcars$hp,
color=factor(mtcars$am,labels=c("automatic","manual")),
colors=c(rgb(.25,.25,.75),rgb(.25,.75,.25)),
text = ~paste(labels(mtcars)[[1]],"\n",hp,"hp")
)%>%
layout(xaxis=xaxis_template,
yaxis=yaxis_template)
shiny::runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
runApp('DataScienceSpecialization/09DataProducts/ForbesWorldBank')
library(devtools)
install_github('slidify', 'ramnathv')
library(slidify)
author(Luis David Bedon Gomez)
author("Luis David Bedon Gomez")
slidify('index.Rmd')
install.packages("slidify")
install.packages("slidify")
install.packages("slidify")
install.packages("slidify")
install.packages("slidifylibraries")
slidify('index.Rmd')
library(slidify)
slidify('index.Rmd')
install.packages("slidifyLibraries")
install_github('ramnathv/slidifyLibraries')
library(devtools)
install_github('ramnathv/slidifyLibraries')
install_github('ramnathv/slidifyLibraries')
remove.packages("slidify")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries','ramnathv')
install_github('slidifyLibraries','ramnathv')*
install_github("slidifyLibraries", "ramnathv")
library(devtools)
install_github("bbTomas/slidifyLibraries")
install_github('slidifyLibraries','ramnathv')
detach("package:slidify", unload=TRUE)
remove.packages("slidify")
install_github('slidifyLibraries','ramnathv')
install_github('ramnathv/slidifyLibraries')
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
slidify('index.Rmd')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='lbedon',
token='E3E42E9B6806E5AFEF43FB526F0AE304',
secret='oMjXSuBJQiAsnupHWgFfjYaBWJUgQbDjXjVEk0EC')
getwd()
setwd(..)
setwd(...)
setwd("..")
getwd()
dir
dir()
setwd("DataProductsCourse" )
getwd()
library(rsconnect)
rsconnect::deployApp()
library(rsconnect)
rsconnect::deployApp("~/DataScienceSpecialization/09DataProducts/DataProductsCourse")
c
shiny::runApp('ForbesWorldBank')
runApp()
library(rsconnect)
rsconnect::deployApp("~/DataScienceSpecialization/09DataProducts/DataProductsCourse")
library(rsconnect)
rsconnect::deployApp("~/DataScienceSpecialization/09DataProducts/DataProductsCourse")
library(rsconnect)
rsconnect::deployApp("~/DataScienceSpecialization/09DataProducts/DataProductsCourse")
library(rsconnect)
rsconnect::deployApp("~/DataScienceSpecialization/09DataProducts/DataProductsCourse")
library(rsconnect)
rsconnect::deployApp("~/DataScienceSpecialization/09DataProducts/DataProductsCourse")
library(rsconnect)
rsconnect::deployApp("~/DataScienceSpecialization/09DataProducts/DataProductsCourse")
library(rsconnect)
rsconnect::deployApp("~/DataScienceSpecialization/09DataProducts/DataProductsCourse")
